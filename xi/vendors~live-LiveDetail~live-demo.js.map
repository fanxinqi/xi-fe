{"version":3,"sources":["webpack:///./node_modules/global/window.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/vue-video-player/dist/vue-video-player.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/trim/index.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/global/document.js","webpack:///./node_modules/video.js/dist/video.cjs.js"],"names":["global","win","window","self","module","exports","fn","string","toString","call","setTimeout","alert","confirm","prompt","Object","prototype","e","__webpack_require__","t","i","n","r","l","m","c","d","o","defineProperty","configurable","enumerable","get","__esModule","default","hasOwnProperty","p","s","value","videojs","assign","TypeError","arguments","length","writable","a","name","props","start","type","Number","crossOrigin","String","playsinline","Boolean","customEventName","options","required","events","Array","globalOptions","controls","controlBar","remainingTimeDisplay","playToggle","progressControl","fullscreenToggle","volumeMenuButton","inline","vertical","techOrder","plugins","globalEvents","data","player","reseted","mounted","this","initialize","beforeDestroy","dispose","methods","$refs","video","setAttribute","$emit","__ob__","concat","on","currentTime","techName_","pause","$nextTick","watch","deep","handler","sources","indexOf","install","videoPlayer","u","component","render","staticRenderFns","_compiled","functional","_scopeId","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","f","beforeCreate","_injectStyles","esModule","$createElement","_self","_c","staticClass","ref","_e","scrollSetting","","up","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","defineProperties","width","set","Error","lines","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","scroll","setting","toLowerCase","findScrollSetting","SyntaxError","autoKeyword","directionSetting","lr","rl","alignSetting","middle","end","left","right","findAlignSetting","extend","obj","cobj","VTTCue","startTime","endTime","text","cue","isIE8","test","navigator","userAgent","baseObj","document","createElement","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","findDirectionSetting","displayState","undefined","getCueAsHTML","WebVTT","convertCueToDOMTree","_objCreate","create","F","ParsingError","errorData","message","code","parseTimeStamp","input","computeSeconds","h","match","replace","Settings","values","parseOptions","callback","keyValueDelim","groupDelim","groups","split","kv","parseCue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","skipWhitespace","substr","settings","k","v","id","region","alt","vals","vals0","integer","percent","line","lineAlign","snapToLines","size","align","position","positionAlign","consumeCueSettings","constructor","BadSignature","dflt","defaultKey","has","parseInt","parseFloat","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","b","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","result","unescape1","unescape","shouldAdd","current","element","localName","annotation","tagName","trim","rootDiv","tagStack","appendChild","createTextNode","pop","parentNode","node","createProcessingInstruction","className","push","strongRTLRanges","isStrongRTLChar","charCode","currentRange","StyleBox","CueStyleBox","styleOptions","color","backgroundColor","cueDiv","styles","top","bottom","display","writingMode","unicodeBidi","applyStyles","div","textAlign","font","whiteSpace","direction","nodeStack","childNodes","pushNodes","nextTextNode","textContent","innerText","charCodeAt","determineBidi","stylesunicodeBidi","textPos","formatStyle","height","move","box","BoxPosition","lh","offsetHeight","offsetWidth","offsetTop","rects","getClientRects","getBoundingClientRect","Math","max","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","track","textTrackList","mediaElement","trackList","count","mode","computeLinePos","axis","step","round","maxPosition","initialAxis","abs","ceil","reverse","calculatedPercentage","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","prop","style","val","unit","toMove","overlaps","b2","boxes","container","min","reference","getSimpleBoxPosition","StringDecoder","decode","decodeURIComponent","encodeURIComponent","cuetext","processCues","cues","overlay","firstChild","removeChild","paddedOverlay","margin","shouldCompute","Parser","vttjs","decoder","state","buffer","TextDecoder","reportOrThrowError","onparsingerror","parse","collectNextLine","pos","parseHeader","ontimestampmap","MPEGTS","LOCAL","xy","anchor","VTTRegion","onregion","parseRegion","stream","alreadyCollectedLine","hasSubstring","oncue","flush","onflush","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","target","source","key","isFunction","list","iterator","context","array","len","forEachArray","charAt","forEachString","object","forEachObject","str","forEach","headers","row","arg","index","slice","parseHeaders","xtend","initParams","uri","params","createXHR","_createXHR","called","err","response","body","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","status","useXDR","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","documentElement","nodeName","getXml","isJson","JSON","getBody","method","url","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","sync","json","stringify","onreadystatechange","readyState","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","setRequestHeader","isEmpty","beforeSend","send","toUpperCase","reviver","error","clean","sa","doccy","topLevel","minDoc","_interopDefault","ex","tsml","safeParseTuple","vtt","version","USER_AGENT","webkitVersionMap","exec","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_OLD_ANDROID","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IS_IE8","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","isReal","DocumentTouch","BACKGROUND_SIZE_SUPPORTED","browser","freeze","_typeof","Symbol","classCallCheck","instance","Constructor","inherits","subClass","superClass","setPrototypeOf","__proto__","possibleConstructorReturn","ReferenceError","taggedTemplateLiteralLoose","strings","raw","keys","isObject","each","_len","_key","apply","isPlain","log","level","history","logByType","args","lvl","levels","lvlRegExp","RegExp","unshift","console","info","map","isArray","x","join","all","off","debug","warn","DEFAULT","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","log$1","computedStyle","el","getComputedStyle","cs","currentStyle","_templateObject","isNonBlankString","throwIfWhitespace","isEl","nodeType","isInFrame","createQuerier","selector","querySelector","ctx","createEl","properties","attributes","content","getOwnPropertyNames","propName","attrName","appendContent","prependTo","child","insertBefore","hasClass","classToCheck","classList","contains","addClass","classToAdd","removeClass","classToRemove","remove","filter","toggleClass","classToToggle","predicate","setAttributes","attrValue","removeAttribute","getAttributes","tag","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","rect","findPosition","docEl","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","getPointerPosition","event","boxW","boxH","boxY","boxX","pageY","pageX","changedTouches","y","isTextNode","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","_guid","newGUID","elData","elIdAttr","Date","getTime","getData","hasData","removeData","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","keyCode","_supportsPassive","opts","addEventListener","passiveEvents","guid","hash","handlersCopy","passive","attachEvent","removeType","splice","trigger","elemData","ownerDocument","bubbles","targetData","one","func","Events","_windowLoaded","videojs$2","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","_i","_i2","_e2","_i3","_e3","mediaEl","autoSetupTimeout","wait","vjs","createStyleElement","setTextContent","styleSheet","cssText","bind","uid","bound","throttle","last","now","debounce","immediate","_later","EventTarget","allowedEvents_","ael","dispatchEvent","isEvented","eventBusEl_","every","isValidEventType","validateTarget","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","_this","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toTitleCase","mergeOptions","Component","ready","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","localize","tokens","defaultValue","language","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","addChild","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","workingChildren","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","firstTouch","couldBeTap","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","then","silencePromise","trackToJson_","reduce","acc","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","handleKeyPress","close","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks","tracks_","addTrack","removeTrack","rtrack","getTrackById","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","_prop","changing_","disableOthers$1","selected","VideoTrackList","TextTrackList","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","href","addToBody","host","protocol","innerHTML","details","location","getFileExtension","path","pathParts","isCrossOrigin","winLoc","urlInfo","Url","getAbsoluteURL","parseCues","srcContent","parser","errors","groupCollapsed","groupEnd","loadTrack","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","srclang","default_","tt","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","active","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","setPlaysinline","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","middleware","lastRun","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","aac","oga","m3u8","checkMimetype","ext","mimetype","MediaLoader","j","techName","isSupported","loadTech_","ClickableComponent","aria-live","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","update","fallbackImg_","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","tryUpdateStyle","TextTrackDisplay","toggleDisplay","preselectTrack","modes","userPref","cache_","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","floor","gm","gh","isNaN","Infinity","implementation","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","UPDATE_REFRESH_INTERVAL","SeekBar","_Slider","updateInterval","update_","getCurrentTime_","videoWasPlaying","newTime","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","volumeControl","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","stepChild","item","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","items","hideThreshold_","title","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unobserve","disconnect","resizeObserver","_templateObject$2","Html5","enableSourceset","setupSourcesetHandling_","crossoriginTracks","currentSrc","initNetworkState_","handleLateInit_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","proto","HTMLMediaElement","srcDescriptor","getOwnPropertyDescriptor","retval","oldSetAttribute","oldLoad","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","eventName","playerElIngest","movingMediaElementInDOM","clone","cloneNode","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","mp4RE","patchCanPlayType","unpatchCanPlayType","_templateObject$1","TECH_EVENTS_RETRIGGER","getTagSettings","closest","isPosterFromTech_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","poster_","controls_","scrubbing_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fluid","aspectRatio","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","fluid_","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_height","techEl","unloadTech_","titleTechName","camelTechName","techOptions","autoplay","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechEnded_","handleTechSeeking_","handleTechSeeked_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","request","starttime","userWasActive","set$1","reduceRight","get$1","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","sourceTech","currentSources","currentSource","currentType","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","inactivityTimeout","defaultPlaybackRate","isAudio_","_ref3$track","toJSON","createModal","_this8","modal","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","Function","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","HTMLVideoElement","normalizeId","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","subClassMethods","super_","_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom"],"mappings":"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","file":"vendors~live-LiveDetail~live-demo.js","sourcesContent":["var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"video.js\")):\"function\"==typeof define&&define.amd?define([\"videojs\"],t):\"object\"==typeof exports?exports.VueVideoPlayer=t(require(\"video.js\")):e.VueVideoPlayer=t(e.videojs)}(this,function(e){return function(e){function t(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"/\",t(t.s=3)}([function(t,n){t.exports=e},function(e,t,n){\"use strict\";function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,\"__esModule\",{value:!0});var r=n(0),o=function(e){return e&&e.__esModule?e:{default:e}}(r),s=window.videojs||o.default;\"function\"!=typeof Object.assign&&Object.defineProperty(Object,\"assign\",{value:function(e,t){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var n=Object(e),i=1;i<arguments.length;i++){var r=arguments[i];if(null!=r)for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(n[o]=r[o])}return n},writable:!0,configurable:!0});var a=[\"loadeddata\",\"canplay\",\"canplaythrough\",\"play\",\"pause\",\"waiting\",\"playing\",\"ended\",\"error\"];t.default={name:\"video-player\",props:{start:{type:Number,default:0},crossOrigin:{type:String,default:\"\"},playsinline:{type:Boolean,default:!1},customEventName:{type:String,default:\"statechanged\"},options:{type:Object,required:!0},events:{type:Array,default:function(){return[]}},globalOptions:{type:Object,default:function(){return{controls:!0,controlBar:{remainingTimeDisplay:!1,playToggle:{},progressControl:{},fullscreenToggle:{},volumeMenuButton:{inline:!1,vertical:!0}},techOrder:[\"html5\"],plugins:{}}}},globalEvents:{type:Array,default:function(){return[]}}},data:function(){return{player:null,reseted:!0}},mounted:function(){this.player||this.initialize()},beforeDestroy:function(){this.player&&this.dispose()},methods:{initialize:function(){var e=this,t=Object.assign({},this.globalOptions,this.options);this.playsinline&&(this.$refs.video.setAttribute(\"playsinline\",this.playsinline),this.$refs.video.setAttribute(\"webkit-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-video-player-type\",\"h5\"),this.$refs.video.setAttribute(\"x5-video-player-fullscreen\",!1)),\"\"!==this.crossOrigin&&(this.$refs.video.crossOrigin=this.crossOrigin,this.$refs.video.setAttribute(\"crossOrigin\",this.crossOrigin));var n=function(t,n){t&&e.$emit(t,e.player),n&&e.$emit(e.customEventName,i({},t,n))};t.plugins&&delete t.plugins.__ob__;var r=this;this.player=s(this.$refs.video,t,function(){for(var e=this,t=a.concat(r.events).concat(r.globalEvents),i={},o=0;o<t.length;o++)\"string\"==typeof t[o]&&void 0===i[t[o]]&&function(t){i[t]=null,e.on(t,function(){n(t,!0)})}(t[o]);this.on(\"timeupdate\",function(){n(\"timeupdate\",this.currentTime())}),r.$emit(\"ready\",this)})},dispose:function(e){var t=this;this.player&&this.player.dispose&&(\"Flash\"!==this.player.techName_&&this.player.pause&&this.player.pause(),this.player.dispose(),this.player=null,this.$nextTick(function(){t.reseted=!1,t.$nextTick(function(){t.reseted=!0,t.$nextTick(function(){e&&e()})})}))}},watch:{options:{deep:!0,handler:function(e,t){var n=this;this.dispose(function(){e&&e.sources&&e.sources.length&&n.initialize()})}}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(1),r=n.n(i);for(var o in i)[\"default\",\"default\"].indexOf(o)<0&&function(e){n.d(t,e,function(){return i[e]})}(o);var s=n(5),a=n(4),l=a(r.a,s.a,!1,null,null,null);t.default=l.exports},function(e,t,n){\"use strict\";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.install=t.videoPlayer=t.videojs=void 0;var r=n(0),o=i(r),s=n(2),a=i(s),l=window.videojs||o.default,u=function(e,t){t&&(t.options&&(a.default.props.globalOptions.default=function(){return t.options}),t.events&&(a.default.props.globalEvents.default=function(){return t.events})),e.component(a.default.name,a.default)},d={videojs:l,videoPlayer:a.default,install:u};t.default=d,t.videojs=l,t.videoPlayer=a.default,t.install=u},function(e,t){e.exports=function(e,t,n,i,r,o){var s,a=e=e||{},l=typeof e.default;\"object\"!==l&&\"function\"!==l||(s=e,a=e.default);var u=\"function\"==typeof a?a.options:a;t&&(u.render=t.render,u.staticRenderFns=t.staticRenderFns,u._compiled=!0),n&&(u.functional=!0),r&&(u._scopeId=r);var d;if(o?(d=function(e){e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,e||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(o)},u._ssrRegister=d):i&&(d=i),d){var c=u.functional,f=c?u.render:u.beforeCreate;c?(u._injectStyles=d,u.render=function(e,t){return d.call(t),f(e,t)}):u.beforeCreate=f?[].concat(f,d):[d]}return{esModule:s,exports:a,options:u}}},function(e,t,n){\"use strict\";var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.reseted?n(\"div\",{staticClass:\"video-player\"},[n(\"video\",{ref:\"video\",staticClass:\"video-js\"})]):e._e()},r=[],o={render:i,staticRenderFns:r};t.a=o}])});","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": true,\n  \"lr\": true,\n  \"rl\": true\n};\nvar alignSetting = {\n  \"start\": true,\n  \"middle\": true,\n  \"end\": true,\n  \"left\": true,\n  \"right\": true\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction extend(obj) {\n  var i = 1;\n  for (; i < arguments.length; i++) {\n    var cobj = arguments[i];\n    for (var p in cobj) {\n      obj[p] = cobj[p];\n    }\n  }\n\n  return obj;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  var cue = this;\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n  var baseObj = {};\n\n  if (isIE8) {\n    cue = document.createElement('custom');\n  } else {\n    baseObj.enumerable = true;\n  }\n\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  cue.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperty(cue,\n    \"id\", extend({}, baseObj, {\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"pauseOnExit\", extend({}, baseObj, {\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"startTime\", extend({}, baseObj, {\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"endTime\", extend({}, baseObj, {\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"text\", extend({}, baseObj, {\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"region\", extend({}, baseObj, {\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"vertical\", extend({}, baseObj, {\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"snapToLines\", extend({}, baseObj, {\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"line\", extend({}, baseObj, {\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"lineAlign\", extend({}, baseObj, {\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"position\", extend({}, baseObj, {\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"positionAlign\", extend({}, baseObj, {\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"size\", extend({}, baseObj, {\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"align\", extend({}, baseObj, {\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  cue.displayState = undefined;\n\n  if (isIE8) {\n    return cue;\n  }\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n  var color = \"rgba(255, 255, 255, 1)\";\n  var backgroundColor = \"rgba(0, 0, 0, 0.8)\";\n\n  if (isIE8) {\n    color = \"rgb(255, 255, 255)\";\n    backgroundColor = \"rgb(0, 0, 0)\";\n  }\n\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: color,\n    backgroundColor: backgroundColor,\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\"\n  };\n\n  if (!isIE8) {\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                     : \"vertical-rl\";\n    styles.unicodeBidi = \"plaintext\";\n  }\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  if (!isIE8) {\n    styles.direction = determineBidi(this.cueDiv);\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                     : \"vertical-rl\".\n    stylesunicodeBidi =  \"plaintext\";\n  }\n\n  this.applyStyles(styles);\n\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n\n  if (isIE8 && !this.lineHeight) {\n    this.lineHeight = 13;\n  }\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","var isFunction = require('is-function')\n\nmodule.exports = forEach\n\nvar toString = Object.prototype.toString\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction forEach(list, iterator, context) {\n    if (!isFunction(iterator)) {\n        throw new TypeError('iterator must be a function')\n    }\n\n    if (arguments.length < 3) {\n        context = this\n    }\n    \n    if (toString.call(list) === '[object Array]')\n        forEachArray(list, iterator, context)\n    else if (typeof list === 'string')\n        forEachString(list, iterator, context)\n    else\n        forEachObject(list, iterator, context)\n}\n\nfunction forEachArray(array, iterator, context) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            iterator.call(context, array[i], i, array)\n        }\n    }\n}\n\nfunction forEachString(string, iterator, context) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        iterator.call(context, string.charAt(i), i, string)\n    }\n}\n\nfunction forEachObject(object, iterator, context) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            iterator.call(context, object[k], k, object)\n        }\n    }\n}\n","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","/**\n * @license\n * Video.js 6.8.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar window = _interopDefault(require('global/window'));\nvar document = _interopDefault(require('global/document'));\nvar tsml = _interopDefault(require('tsml'));\nvar safeParseTuple = _interopDefault(require('safe-json-parse/tuple'));\nvar xhr = _interopDefault(require('xhr'));\nvar vtt = _interopDefault(require('videojs-vtt.js'));\n\nvar version = \"6.8.0\";\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window.navigator && window.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\n// Old Android is defined as Version older than 2.3, and requiring a webkit version of the android browser\nvar IS_OLD_ANDROID = IS_ANDROID && /webkit/i.test(USER_AGENT) && ANDROID_VERSION < 2.3;\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && /Chrome/i.test(USER_AGENT);\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/Chrome\\/(\\d+)/);\n\n  if (match && match[1]) {\n    return parseFloat(match[1]);\n  }\n  return null;\n}();\nvar IS_IE8 = /MSIE\\s8\\.0/.test(USER_AGENT);\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = IS_SAFARI || IS_IOS;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window || window.DocumentTouch && window.document instanceof window.DocumentTouch);\n\nvar BACKGROUND_SIZE_SUPPORTED = isReal() && 'backgroundSize' in window.document.createElement('video').style;\n\nvar browser = (Object.freeze || Object)({\n\tIS_IPAD: IS_IPAD,\n\tIS_IPHONE: IS_IPHONE,\n\tIS_IPOD: IS_IPOD,\n\tIS_IOS: IS_IOS,\n\tIOS_VERSION: IOS_VERSION,\n\tIS_ANDROID: IS_ANDROID,\n\tANDROID_VERSION: ANDROID_VERSION,\n\tIS_OLD_ANDROID: IS_OLD_ANDROID,\n\tIS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n\tIS_FIREFOX: IS_FIREFOX,\n\tIS_EDGE: IS_EDGE,\n\tIS_CHROME: IS_CHROME,\n\tCHROME_VERSION: CHROME_VERSION,\n\tIS_IE8: IS_IE8,\n\tIE_VERSION: IE_VERSION,\n\tIS_SAFARI: IS_SAFARI,\n\tIS_ANY_SAFARI: IS_ANY_SAFARI,\n\tTOUCH_ENABLED: TOUCH_ENABLED,\n\tBACKGROUND_SIZE_SUPPORTED: BACKGROUND_SIZE_SUPPORTED\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = void 0;\n\n// This is the private tracking variable for logging level.\nvar level = 'info';\n\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n *\n * @param  {boolean} [stringify]\n *         By default, only old IEs should get console argument stringification,\n *         but this is exposed as a parameter to facilitate testing.\n */\nvar logByType = function logByType(type, args) {\n  var stringify = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !!IE_VERSION && IE_VERSION < 11;\n\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = window.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window.console.info || window.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  // IEs previous to 11 log objects uselessly as \"[object Object]\"; so, JSONify\n  // objects and arrays for those less-capable browsers.\n  if (stringify) {\n    args = args.map(function (a) {\n      if (isObject(a) || Array.isArray(a)) {\n        try {\n          return JSON.stringify(a);\n        } catch (x) {\n          return String(a);\n        }\n      }\n\n      // Cast to string before joining, so we get null and undefined explicitly\n      // included in output (as we would in a modern console).\n      return String(a);\n    }).join(' ');\n  }\n\n  // Old IE versions do not allow .apply() for console methods (they are\n  // reported as objects rather than functions).\n  if (!fn.apply) {\n    fn(args);\n  } else {\n    fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n  }\n};\n\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n    level = lvl;\n  }\n  return level;\n};\n\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n\n/**\n * Disable history tracking if it is currently enabled.\n */\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n\n/**\n * Enable history tracking if it is currently disabled.\n */\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window.getComputedStyle === 'function') {\n    var cs = window.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return el.currentStyle[prop] || '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * @file dom.js\n * @module dom\n */\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  return (\n\n    // Both document and window will never be undefined thanks to `global`.\n    document === window.document &&\n\n    // In IE < 9, DOM methods return \"object\" as their type, so all we can\n    // confidently check is that it exists.\n    typeof document.createElement !== 'undefined'\n  );\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window.parent !== window.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but older browsers\n  // won't know about HTML5 boolean attributes that we still read from\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (IE_VERSION === 9) {\n    // Ignore IE9\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\n\n\nvar Dom = (Object.freeze || Object)({\n\tisReal: isReal,\n\tisEl: isEl,\n\tisInFrame: isInFrame,\n\tcreateEl: createEl,\n\ttextContent: textContent,\n\tprependTo: prependTo,\n\thasClass: hasClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\ttoggleClass: toggleClass,\n\tsetAttributes: setAttributes,\n\tgetAttributes: getAttributes,\n\tgetAttribute: getAttribute,\n\tsetAttribute: setAttribute,\n\tremoveAttribute: removeAttribute,\n\tblockTextSelection: blockTextSelection,\n\tunblockTextSelection: unblockTextSelection,\n\tgetBoundingClientRect: getBoundingClientRect,\n\tfindPosition: findPosition,\n\tgetPointerPosition: getPointerPosition,\n\tisTextNode: isTextNode,\n\temptyEl: emptyEl,\n\tnormalizeContent: normalizeContent,\n\tappendContent: appendContent,\n\tinsertContent: insertContent,\n\tisSingleLeftClick: isSingleLeftClick,\n\t$: $,\n\t$$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window.addEventListener('test', null, opts);\n    window.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = (Object.freeze || Object)({\n\tfixEvent: fixEvent,\n\ton: on,\n\toff: off,\n\ttrigger: trigger,\n\tone: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs$2 = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments.\n  if (!isReal()) {\n    return;\n  }\n\n  // One day, when we stop supporting IE8, go back to this, but in the meantime...*hack hack hack*\n  // var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  // var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  // var mediaEls = vids.concat(audios);\n\n  // Because IE8 doesn't support calling slice on a node list, we need to loop\n  // through each list of elements to build up a new, combined list of elements.\n  var vids = document.getElementsByTagName('video');\n  var audios = document.getElementsByTagName('audio');\n  var divs = document.getElementsByTagName('video-js');\n  var mediaEls = [];\n\n  if (vids && vids.length > 0) {\n    for (var i = 0, e = vids.length; i < e; i++) {\n      mediaEls.push(vids[i]);\n    }\n  }\n\n  if (audios && audios.length > 0) {\n    for (var _i = 0, _e = audios.length; _i < _e; _i++) {\n      mediaEls.push(audios[_i]);\n    }\n  }\n\n  if (divs && divs.length > 0) {\n    for (var _i2 = 0, _e2 = divs.length; _i2 < _e2; _i2++) {\n      mediaEls.push(divs[_i2]);\n    }\n  }\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var _i3 = 0, _e3 = mediaEls.length; _i3 < _e3; _i3++) {\n      var mediaEl = mediaEls[_i3];\n\n      // Check if element exists, has getAttribute func.\n      // IE seems to consider typeof el.getAttribute == 'object' instead of\n      // 'function' like expected, at least when loading the player immediately.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$2(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs$2 = vjs;\n  }\n\n  window.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window;\n\n  var timeout = void 0;\n\n  /* eslint-disable consistent-this */\n  return function () {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilites to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window.getComputedStyle === 'function') {\n      var computedStyle = window.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs on IE8 and wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose}.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    fn = bind(this, fn);\n\n    var timeoutId = window.setTimeout(fn, timeout);\n    var disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      var id = window.requestAnimationFrame(fn);\n      var disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The proprety that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @param {Object} [list]\n   *        The child object with inheritance done manually for ie8.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var _ret;\n\n    var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    if (!list) {\n      list = _this; // eslint-disable-line\n      if (IS_IE8) {\n        list = document.createElement('custom');\n        for (var prop in TrackList.prototype) {\n          if (prop !== 'constructor') {\n            list[prop] = TrackList.prototype[prop];\n          }\n        }\n      }\n    }\n\n    list.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      list.addTrack(tracks[i]);\n    }\n\n    // must return the object, as for ie8 it will not be this\n    // but a reference to a document object\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in AudioTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = AudioTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in VideoTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = VideoTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(list, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {TextTrack[]} [tracks=[]]\n   *        A list of `TextTrack` to instantiate the list with.\n   */\n  function TextTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TextTrackList);\n\n    var list = void 0;\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in TextTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = TextTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.trigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    var list = this; // eslint-disable-line\n\n    if (IS_IE8) {\n      list = document.createElement('custom');\n\n      for (var prop in HtmlTrackElementList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = HtmlTrackElementList.prototype[prop];\n        }\n      }\n    }\n\n    list.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      list.addTrackElement_(trackElements[i]);\n    }\n\n    if (IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    var list = this; // eslint-disable-line\n\n    if (IS_IE8) {\n      list = document.createElement('custom');\n\n      for (var prop in TextTrackCueList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TextTrackCueList.prototype[prop];\n        }\n      }\n    }\n\n    TextTrackCueList.prototype.setCues_.call(list, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n\n    if (IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var track = _this; // eslint-disable-line\n\n    if (IS_IE8) {\n      track = document.createElement('custom');\n      for (var prop in Track.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = Track.prototype[prop];\n        }\n      }\n    }\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(track, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = (Object.freeze || Object)({\n\tparseUrl: parseUrl,\n\tgetAbsoluteURL: getAbsoluteURL,\n\tgetFileExtension: getFileExtension,\n\tisCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window.WebVTT.Parser(window, window.vttjs, window.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window.console && window.console.groupCollapsed) {\n      window.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n    if (window.console && window.console.groupEnd) {\n      window.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specifed url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings['default'];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var tt = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n\n    tt.tech_ = settings.tech;\n\n    if (IS_IE8) {\n      for (var prop in TextTrack.prototype) {\n        if (prop !== 'constructor') {\n          tt[prop] = TextTrack.prototype[prop];\n        }\n      }\n    }\n\n    tt.cues_ = [];\n    tt.activeCues_ = [];\n\n    var cues = new TextTrackCueList(tt.cues_);\n    var activeCues = new TextTrackCueList(tt.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(tt, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      /* eslint-disable no-unused-expressions */\n      this.activeCues;\n      /* eslint-enable no-unused-expressions */\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      tt.tech_.ready(function () {\n        tt.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    /**\n     * @memberof TextTrack\n     * @member {boolean} default\n     *         If this track was set to be on or off by default. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n    Object.defineProperty(tt, 'default', {\n      get: function get$$1() {\n        return default_;\n      },\n      set: function set$$1() {}\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {string} mode\n     *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n     *         not be set if setting to an invalid mode.\n     * @instance\n     *\n     * @fires TextTrack#modechange\n     */\n    Object.defineProperty(tt, 'mode', {\n      get: function get$$1() {\n        return mode;\n      },\n      set: function set$$1(newMode) {\n        var _this2 = this;\n\n        if (!TextTrackMode[newMode]) {\n          return;\n        }\n        mode = newMode;\n        if (mode === 'showing') {\n\n          this.tech_.ready(function () {\n            _this2.tech_.on('timeupdate', timeupdateHandler);\n          }, true);\n        }\n        /**\n         * An event that fires when mode changes on this track. This allows\n         * the TextTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec!\n         *\n         * @event TextTrack#modechange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('modechange');\n      }\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {TextTrackCueList} cues\n     *         The text track cue list for this TextTrack.\n     * @instance\n     */\n    Object.defineProperty(tt, 'cues', {\n      get: function get$$1() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        return cues;\n      },\n      set: function set$$1() {}\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {TextTrackCueList} activeCues\n     *         The list text track cues that are currently active for this TextTrack.\n     * @instance\n     */\n    Object.defineProperty(tt, 'activeCues', {\n      get: function get$$1() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        // nothing to do\n        if (this.cues.length === 0) {\n          return activeCues;\n        }\n\n        var ct = this.tech_.currentTime();\n        var active = [];\n\n        for (var i = 0, l = this.cues.length; i < l; i++) {\n          var cue = this.cues[i];\n\n          if (cue.startTime <= ct && cue.endTime >= ct) {\n            active.push(cue);\n          } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n            active.push(cue);\n          }\n        }\n\n        changed = false;\n\n        if (active.length !== this.activeCues_.length) {\n          changed = true;\n        } else {\n          for (var _i = 0; _i < active.length; _i++) {\n            if (this.activeCues_.indexOf(active[_i]) === -1) {\n              changed = true;\n            }\n          }\n        }\n\n        this.activeCues_ = active;\n        activeCues.setCues_(this.activeCues_);\n\n        return activeCues;\n      },\n      set: function set$$1() {}\n    });\n\n    if (settings.src) {\n      tt.src = settings.src;\n      loadTrack(settings.src, tt);\n    } else {\n      tt.loaded_ = true;\n    }\n\n    return _ret = tt, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window.vttjs && !(originalCue instanceof window.vttjs.VTTCue)) {\n      cue = new window.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var enabled = false;\n\n    if (IS_IE8) {\n      for (var prop in AudioTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = AudioTrack.prototype[prop];\n        }\n      }\n    }\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      track.enabled = settings.enabled;\n    }\n    track.loaded_ = true;\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var selected = false;\n\n    if (IS_IE8) {\n      for (var prop in VideoTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = VideoTrack.prototype[prop];\n        }\n      }\n    }\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      track.selected = settings.selected;\n    }\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n    var trackElement = _this; // eslint-disable-line\n\n    if (IS_IE8) {\n      trackElement = document.createElement('custom');\n\n      for (var prop in HTMLTrackElement.prototype) {\n        if (prop !== 'constructor') {\n          trackElement[prop] = HTMLTrackElement.prototype[prop];\n        }\n      }\n    }\n\n    var track = new TextTrack(options);\n\n    trackElement.kind = track.kind;\n    trackElement.src = track.src;\n    trackElement.srclang = track.language;\n    trackElement.label = track.label;\n    trackElement['default'] = track['default'];\n\n    /**\n     * @memberof HTMLTrackElement\n     * @member {HTMLTrackElement~ReadyState} readyState\n     *         The current ready state of the track element.\n     * @instance\n     */\n    Object.defineProperty(trackElement, 'readyState', {\n      get: function get$$1() {\n        return readyState;\n      }\n    });\n\n    /**\n     * @memberof HTMLTrackElement\n     * @member {TextTrack} track\n     *         The underlying TextTrack object.\n     * @instance\n     *\n     */\n    Object.defineProperty(trackElement, 'track', {\n      get: function get$$1() {\n        return track;\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      trackElement.trigger({\n        type: 'load',\n        target: trackElement\n      });\n    });\n\n    if (IS_IE8) {\n      var _ret;\n\n      return _ret = trackElement, possibleConstructorReturn(_this, _ret);\n    }\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks wether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.12.4/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requsted.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window && window.videojs && window.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating wether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating wether the `Tech` support fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating wether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source hander found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middlware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [checkMimetype({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [checkMimetype(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction checkMimetype(src) {\n  var ext = getFileExtension(src.src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value stroe of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file button.js\n */\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      'role': 'button',\n\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dipose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    // To ensure the poster image resizes while maintaining its original aspect\n    // ratio, use a div with `background-size` when available. For browsers that\n    // do not support `background-size` (e.g. IE8), fall back on using a regular\n    // img element.\n    if (!BACKGROUND_SIZE_SUPPORTED) {\n      this.fallbackImg_ = createEl('img');\n      el.appendChild(this.fallbackImg_);\n    }\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    if (this.fallbackImg_) {\n      this.fallbackImg_.src = url;\n    } else {\n      var backgroundImage = '';\n\n      // Any falsey values should stay as an empty string, otherwise\n      // this will throw an extra error\n      if (url) {\n        backgroundImage = 'url(\"' + url + '\")';\n      }\n\n      this.el_.style.backgroundImage = backgroundImage;\n    }\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n *\n * @private\n */\nfunction constructColor(color, opacity) {\n  return 'rgba(' +\n  // color looks like \"#f0e\"\n  parseInt(color[1] + color[1], 16) + ',' + parseInt(color[2] + color[2], 16) + ',' + parseInt(color[3] + color[3], 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track['default']) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precendence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window.WebVTT === 'function') {\n      window.WebVTT.processCues(window, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link Texttrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window.WebVTT.processCues(window, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      'type': 'button',\n\n      // let the screen reader user know that the text of the button may change\n      'aria-live': 'polite'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nvar formatTime = function (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n};\n\n/**\n * @file time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    }, createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize(this.controlText_)\n    }));\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || '0:00');\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.controlText_ = 'Duration Time';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    event.preventDefault();\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - postition.x for vertical `Slider`s\n   *         - postition.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices or IE8\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), UPDATE_REFRESH_INTERVAL);\n\n    _this.on(player, 'timeupdate', _this.update);\n    _this.on(player, 'ended', _this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    _this.updateInterval = null;\n\n    _this.on(player, ['playing'], function () {\n      _this.clearInterval(_this.updateInterval);\n\n      _this.updateInterval = _this.setInterval(function () {\n        _this.requestAnimationFrame(function () {\n          _this.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    _this.on(player, ['ended', 'pause', 'waiting'], function () {\n      _this.clearInterval(_this.updateInterval);\n    });\n\n    _this.on(player, ['timeupdate', 'ended'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessiblity\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessiblity\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices or IE8\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n// Required children\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n// Required children\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * @file mute-toggle.js\n */\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n// Required children\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere and it logs an error on IE8\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      // TODO: May need to be either menuitemcheckbox or menuitemradio,\n      //       and may need logical grouping of menu items.\n      _this.el_.setAttribute('role', 'menuitemcheckbox');\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts int into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an overide for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n// Required children\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    }, {\n      // The control bar is a group, but we don't aria-label it to avoid\n      //  over-announcing by JAWS\n      role: 'group'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    'default': 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + (legendId !== '' ? legendId + ' ' : '') + id + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1];\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + (legendId !== '' ? legendId + ' ' : '') + id + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config['default'] : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({ createEl: !RESIZE_OBSERVER_AVAILABLE }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, player);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (_this.el_.contentWindow) {\n          on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n        }\n        _this.off('load', _this.loadListener_);\n      };\n\n      _this.on('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.resizeObserver_) {\n      this.resizeObserver_.unobserve(this.player_.el());\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * @file html5.js\n */\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SouceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    var _this2 = this;\n\n    if (!this.featuresSourceset) {\n      return;\n    }\n\n    var el = this.el();\n\n    // we need to fire sourceset when the player is ready\n    // if we find that the media element had a src when it was\n    // given to us and that tech element is not in a stalled state\n    if (el.src || el.currentSrc && this.el().initNetworkState_ !== 3) {\n      this.triggerSourceset(el.src || el.currentSrc);\n    }\n\n    var proto = window.HTMLMediaElement.prototype;\n    var srcDescriptor = {};\n\n    // preserve getters/setters already on `el.src` if they exist\n    if (Object.getOwnPropertyDescriptor(el, 'src')) {\n      srcDescriptor = Object.getOwnPropertyDescriptor(el, 'src');\n    } else if (Object.getOwnPropertyDescriptor(proto, 'src')) {\n      srcDescriptor = mergeOptions(srcDescriptor, Object.getOwnPropertyDescriptor(proto, 'src'));\n    }\n\n    if (!srcDescriptor.get) {\n      srcDescriptor.get = function () {\n        return proto.getAttribute.call(this, 'src');\n      };\n    }\n\n    if (!srcDescriptor.set) {\n      srcDescriptor.set = function (v) {\n        return proto.setAttribute.call(this, 'src', v);\n      };\n    }\n\n    if (typeof srcDescriptor.enumerable === 'undefined') {\n      srcDescriptor.enumerable = true;\n    }\n\n    Object.defineProperty(el, 'src', {\n      get: srcDescriptor.get.bind(el),\n      set: function set$$1(v) {\n        var retval = srcDescriptor.set.call(el, v);\n\n        _this2.triggerSourceset(v);\n\n        return retval;\n      },\n      configurable: true,\n      enumerable: srcDescriptor.enumerable\n    });\n\n    var oldSetAttribute = el.setAttribute;\n\n    el.setAttribute = function (n, v) {\n      var retval = oldSetAttribute.call(el, n, v);\n\n      if (n === 'src') {\n        _this2.triggerSourceset(v);\n      }\n\n      return retval;\n    };\n\n    var oldLoad = el.load;\n\n    el.load = function () {\n      var retval = oldLoad.call(el);\n\n      // if `el.src` is set, that source will be loaded\n      // otherwise, we can't know for sure what source will be set because\n      // source elements will be used but implementing the source selection algorithm\n      // is laborious and asynchronous, so,\n      // instead return an empty string to basically indicate source may change\n      _this2.triggerSourceset(el.src || '');\n\n      return retval;\n    };\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this3 = this;\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var elTracks = _this3.el()[props.getterName];\n      var techTracks = _this3[props.getterName]();\n\n      if (!_this3['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n        return;\n      }\n      var listeners = {\n        change: function change(e) {\n          techTracks.trigger({\n            type: 'change',\n            target: techTracks,\n            currentTarget: techTracks,\n            srcElement: techTracks\n          });\n        },\n        addtrack: function addtrack(e) {\n          techTracks.addTrack(e.track);\n        },\n        removetrack: function removetrack(e) {\n          techTracks.removeTrack(e.track);\n        }\n      };\n      var removeOldTracks = function removeOldTracks() {\n        var removeTracks = [];\n\n        for (var i = 0; i < techTracks.length; i++) {\n          var found = false;\n\n          for (var j = 0; j < elTracks.length; j++) {\n            if (elTracks[j] === techTracks[i]) {\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            removeTracks.push(techTracks[i]);\n          }\n        }\n\n        while (removeTracks.length) {\n          techTracks.removeTrack(removeTracks.shift());\n        }\n      };\n\n      Object.keys(listeners).forEach(function (eventName) {\n        var listener = listeners[eventName];\n\n        elTracks.addEventListener(eventName, listener);\n        _this3.on('dispose', function (e) {\n          return elTracks.removeEventListener(eventName, listener);\n        });\n      });\n\n      // Remove (native) tracks that are not used anymore\n      _this3.on('loadstart', removeOldTracks);\n      _this3.on('dispose', function (e) {\n        return _this3.off('loadstart', removeOldTracks);\n      });\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          'class': 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this4 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this4.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this4.el_.duration === Infinity) {\n            _this4.trigger('durationchange');\n          }\n          _this4.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The heigth of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this5 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this5.off('webkitbeginfullscreen', beginFn);\n      _this5.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window.navigator && window.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to intialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options['default']) {\n      htmlTrackElement['default'] = options['default'];\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window.performance && typeof window.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window.performance.now();\n    } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE9 with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overriden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  if (IS_IE8) {\n    return false;\n  }\n  // if we cannot overwrite the src property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggred instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggred instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\nvar mp4RE = /^video\\/mp4/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n\n    // Override Android 2.2 and less canPlayType method which is broken\n  } else if (IS_OLD_ANDROID) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mp4RE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occured during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - Flase indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NEWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeigth` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @proprety {Tech~SourceObject} source\n *        The source object\n *\n * @proprety {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE9 on Windows 7 without MediaPlayer throws an error here\n  // https://github.com/videojs/video.js/issues/519\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n/**\n * @file player.js\n */\n// Subclasses Component\n// The following imports are used only to ensure that the corresponding modules\n// are always included in the video.js package. Importing the modules will\n// execute them and they will register themselves with video.js.\n// Import Html5 tech, at least for disposing the original video tag.\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the playing speed of the audio/video is changed\n *\n * @event Player#ratechange\n * @type {event}\n */\n/**\n * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechRatechange_\n * @fires Player#ratechange\n * @listens Tech#ratechange\n */\n'ratechange',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // Tracks when a tech changes the poster\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n    _this.listenForUserActivity_();\n\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n    }\n\n    // set tabindex to -1 so we could focus on the player element\n    tag.setAttribute('tabindex', '-1');\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // workaround so we don't totally break IE7\n      // http://stackoverflow.com/questions/3653444/css-styles-not-applied-on-dynamic-elements-in-internet-explorer-7\n      if (attr === 'class') {\n        el.className += ' ' + attrs[attr];\n\n        if (divEmbed) {\n          tag.className += ' ' + attrs[attr];\n        }\n      } else {\n        el.setAttribute(attr, attrs[attr]);\n\n        if (divEmbed) {\n          tag.setAttribute(attr, attrs[attr]);\n        }\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag, because IE doesn't hide them completely.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + titleTechName + '_api',\n      'autoplay': this.options_.autoplay,\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'canplay', this.handleTechCanPlay_);\n    this.on(this.tech_, 'canplaythrough', this.handleTechCanPlayThrough_);\n    this.on(this.tech_, 'playing', this.handleTechPlaying_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'seeked', this.handleTechSeeked_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$1));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n\n    // Chrome and Safari both have issues with autoplay.\n    // In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.\n    // In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)\n    // This fixes both issues. Need to wait for API, so it updates displays correctly\n    if ((this.src() || this.currentSrc()) && this.tag && this.options_.autoplay && this.paused()) {\n      try {\n        // Chrome Fix. Fixed in Chrome v16.\n        delete this.tag.poster;\n      } catch (e) {\n        log$1('deleting tag.poster throws in some browsers', e);\n      }\n    }\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this4 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this4.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   * @deprecated As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a `Promise` only if the browser returns one and the player\n   *         is ready to begin playback. For some browsers and all non-ready\n   *         situations, this will return `undefined`.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this5 = this;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this5.playWaitingForReady_ = false;\n        silencePromise(_this5.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      return this.techGet_('play');\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this5.playOnLoadstart_ = null;\n        silencePromise(_this5.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        wether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Inifity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is bufferred 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on intial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this6 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this6.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this7 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.cache_.sources = sources;\n    this.changingSrc_ = true;\n\n    // intial source\n    this.cache_.source = sources[0];\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this7.middleware_ = mws;\n\n      var err = _this7.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this7.src(sources.slice(1));\n        }\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this7.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this7.triggerReady();\n\n        return;\n      }\n\n      _this7.changingSrc_ = false;\n      // video element listed source\n      _this7.cache_.src = middlewareSource.src;\n\n      setTech(mws, _this7.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates wether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      if (this.options_.preload === 'auto') {\n        this.load();\n      }\n\n      // Set the source synchronously if possible (#2326)\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjuction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false maens that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay attribute.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should autoplay\n   *        - false means that we should not autoplay\n   *\n   * @return {string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    if (value !== undefined) {\n      this.techCall_('setAutoplay', value);\n      this.options_.autoplay = value;\n      return;\n    }\n    return this.techGet_('autoplay', value);\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // ie8 just logs \"[object object]\" if you just log the error object\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the intial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the lanugage\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this8 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this8.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine wether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec)\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\nif (!IS_IE8) {\n  Player.prototype.options_.children.push('resizeManager');\n}\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n// Include the built-in techs\n// HTML5 Element Shim for IE8\nif (typeof HTMLVideoElement === 'undefined' && isReal()) {\n  document.createElement('video');\n  document.createElement('audio');\n  document.createElement('track');\n  document.createElement('video-js');\n}\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs(id, options, ready) {\n  var player = videojs.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs.hooks = function (type, fn) {\n  videojs.hooks_[type] = videojs.hooks_[type] || [];\n  if (fn) {\n    videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\n  }\n  return videojs.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hook = function (type, fn) {\n  videojs.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hookOnce = function (type, fn) {\n  videojs.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs.removeHook = function (type, fn) {\n  var index = videojs.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs.hooks_[type] = videojs.hooks_[type].slice();\n  videojs.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\n// Object.defineProperty is not available in IE8\nif (!IS_IE8 && Object.defineProperty) {\n  Object.defineProperty(videojs, 'middleware', {\n    value: {},\n    writeable: false,\n    enumerable: true\n  });\n\n  Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n    value: TERMINATOR,\n    writeable: false,\n    enumerable: true\n  });\n} else {\n  videojs.middleware = { TERMINATOR: TERMINATOR };\n}\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs.options.languages = mergeOptions(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs.log = log$1;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs.url = Url;\n\nmodule.exports = videojs;\n"],"sourceRoot":""}